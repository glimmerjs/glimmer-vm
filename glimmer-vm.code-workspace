{
  "folders": [
    {
      "name": "âœ¨ glimmer-engine",
      "path": "."
    },
    {
      "name": "glimmer-benchmark",
      "path": "benchmark"
    },
    {
      "name": "@glimmer-workspace/krausest",
      "path": "benchmark/benchmarks/krausest"
    },
    {
      "name": "@glimmer-workspace/bin",
      "path": "bin"
    },
    {
      "name": "ğŸ“¦ packages",
      "path": "packages"
    },
    {
      "name": "ğŸ“¦ @glimmer-workspace/benchmark-env",
      "path": "packages/@glimmer-workspace/benchmark-env"
    },
    {
      "name": "ğŸ“¦ @glimmer-workspace/build-support",
      "path": "packages/@glimmer-workspace/build"
    },
    {
      "name": "ğŸ“¦ @glimmer-workspace/eslint-plugin",
      "path": "packages/@glimmer-workspace/eslint-plugin"
    },
    {
      "name": "ğŸ“¦ @glimmer-workspace/integration-tests",
      "path": "packages/@glimmer-workspace/integration-tests"
    },
    {
      "name": "ğŸ“¦ @glimmer-workspace/test-utils",
      "path": "packages/@glimmer-workspace/test-utils"
    },
    {
      "name": "ğŸ“¦ @glimmer/compiler",
      "path": "packages/@glimmer/compiler"
    },
    {
      "name": "ğŸ“¦ @glimmer-test/compiler",
      "path": "packages/@glimmer/compiler/test"
    },
    {
      "name": "ğŸ“¦ @glimmer/debug",
      "path": "packages/@glimmer/debug"
    },
    {
      "name": "ğŸ“¦ @glimmer/destroyable",
      "path": "packages/@glimmer/destroyable"
    },
    {
      "name": "ğŸ“¦ @glimmer-test/destroyable",
      "path": "packages/@glimmer/destroyable/test"
    },
    {
      "name": "ğŸ“¦ @glimmer/dom-change-list",
      "path": "packages/@glimmer/dom-change-list"
    },
    {
      "name": "ğŸ“¦ @glimmer-test/dom-change-list",
      "path": "packages/@glimmer/dom-change-list/test"
    },
    {
      "name": "ğŸ“¦ @glimmer/encoder",
      "path": "packages/@glimmer/encoder"
    },
    {
      "name": "ğŸ“¦ @glimmer/global-context",
      "path": "packages/@glimmer/global-context"
    },
    {
      "name": "ğŸ“¦ @glimmer/interfaces",
      "path": "packages/@glimmer/interfaces"
    },
    {
      "name": "ğŸ“¦ @glimmer/local-debug-flags",
      "path": "packages/@glimmer/local-debug-flags"
    },
    {
      "name": "ğŸ“¦ @glimmer/manager",
      "path": "packages/@glimmer/manager"
    },
    {
      "name": "ğŸ“¦ @glimmer-test/manager",
      "path": "packages/@glimmer/manager/test"
    },
    {
      "name": "ğŸ“¦ @glimmer/node",
      "path": "packages/@glimmer/node"
    },
    {
      "name": "ğŸ“¦ @glimmer/opcode-compiler",
      "path": "packages/@glimmer/opcode-compiler"
    },
    {
      "name": "ğŸ“¦ @glimmer/owner",
      "path": "packages/@glimmer/owner"
    },
    {
      "name": "ğŸ“¦ @glimmer-test/owner",
      "path": "packages/@glimmer/owner/test"
    },
    {
      "name": "ğŸ“¦ @glimmer/program",
      "path": "packages/@glimmer/program"
    },
    {
      "name": "ğŸ“¦ @glimmer-test/program",
      "path": "packages/@glimmer/program/test"
    },
    {
      "name": "ğŸ“¦ @glimmer/reference",
      "path": "packages/@glimmer/reference"
    },
    {
      "name": "ğŸ“¦ @glimmer-test/reference",
      "path": "packages/@glimmer/reference/test"
    },
    {
      "name": "ğŸ“¦ @glimmer/runtime",
      "path": "packages/@glimmer/runtime"
    },
    {
      "name": "ğŸ“¦ @glimmer/syntax",
      "path": "packages/@glimmer/syntax"
    },
    {
      "name": "ğŸ“¦ @glimmer-test/syntax",
      "path": "packages/@glimmer/syntax/test"
    },
    {
      "name": "ğŸ“¦ @glimmer/util",
      "path": "packages/@glimmer/util"
    },
    {
      "name": "ğŸ“¦ @glimmer-test/util",
      "path": "packages/@glimmer/util/test"
    },
    {
      "name": "ğŸ“¦ @glimmer/validator",
      "path": "packages/@glimmer/validator"
    },
    {
      "name": "ğŸ“¦ @glimmer-test/validator",
      "path": "packages/@glimmer/validator/test"
    },
    {
      "name": "ğŸ“¦ @glimmer/vm",
      "path": "packages/@glimmer/vm"
    },
    {
      "name": "ğŸ“¦ @glimmer/vm-babel-plugins",
      "path": "packages/@glimmer/vm-babel-plugins"
    },
    {
      "name": "ğŸ“¦ @glimmer/wire-format",
      "path": "packages/@glimmer/wire-format"
    },
    {
      "name": "ğŸ“¦ @types/js-reporters",
      "path": "packages/@types/js-reporters"
    },
    {
      "name": "ğŸ“¦ @types/puppeteer-chromium-resolver",
      "path": "packages/@types/puppeteer-chromium-resolver"
    },
    {
      "name": "ğŸ“¦ @types/qunit",
      "path": "packages/@types/qunit"
    }
  ],
  "settings": {
    "typescript.tsc.autoDetect": "on",
    "typescript.tsdk": "node_modules/typescript/lib",
    "typescript.tsserver.experimental.enableProjectDiagnostics": true
  }
}
