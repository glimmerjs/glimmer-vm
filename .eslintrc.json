{
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:qunit/recommended",
    "plugin:n/recommended",
    "plugin:import/errors",
    "prettier"
  ],
  "ignorePatterns": ["dist", "ts-dist", "node_modules", "tmp", "**/node_modules", "**/dist"],
  "overrides": [
    {
      "extends": [
        // "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:import/errors",
        "plugin:import/typescript",
        "plugin:qunit/recommended",
        "prettier"
      ],
      "files": [
        "packages/@glimmer/compiler/**/*.ts",
        "packages/@glimmer/syntax/lib/**/*.ts",
        "packages/@glimmer/syntax/index.ts"
      ],
      "parserOptions": {
        "project": "./tsconfig.json"
      },
      "rules": {
        "@typescript-eslint/ban-types": [
          "error",
          {
            "extendDefaults": true,
            "types": {
              "object": false
            }
          }
        ],
        "@typescript-eslint/no-explicit-any": [
          "error",
          {
            "ignoreRestArgs": true
          }
        ],
        "@typescript-eslint/unbound-method": [
          "error",
          {
            "ignoreStatic": true
          }
        ],
        // this is handled by import/errors
        "n/no-extraneous-import": "off",
        "prefer-const": ["off"],
        "qunit/no-global-expect": ["off"]
      }
    },
    {
      "files": ["**/*.d.ts"],
      "parserOptions": {
        "sourceType": "module"
      },
      "rules": {
        "n/no-missing-import": "off",
        "no-useless-constructor": "off"
      }
    },
    // node files
    {
      "env": {
        "es6": true,
        "node": true
      },
      "files": [
        ".eslintrc.js",
        "ember-cli-build.js",
        "testem.js",
        "testem-browserstack.js",
        "bin/**/*.js",
        "bin/**/*.mjs",
        "build/**/*.js",
        "server/**/*.js"
      ],
      "rules": {
        "no-console": "off"
      }
    },
    // bin scripts
    {
      "files": ["bin/**/*.js"],
      "rules": {
        "n/no-unsupported-features/es-syntax": [
          "error",
          {
            "ignores": [],
            "version": ">=16.0.0"
          }
        ],
        "n/shebang": "off"
      }
    },
    {
      "env": {
        "browser": true,
        "es6": true
      },
      "extends": ["plugin:import/errors"],
      "files": ["benchmark/**/*.js", "benchmark/**/*.d.ts"],
      "parserOptions": {
        "sourceType": "module"
      },
      "rules": {
        "n/no-unsupported-features/es-syntax": "off",
        "no-console": "off"
      }
    },
    {
      "env": {
        "es6": true,
        "mocha": true,
        "node": true
      },
      "files": ["packages/build-utils/@glimmer/vm-babel-plugins/test/**/*.js"],
      "rules": {
        "n/no-unpublished-import": "off",
        "n/no-unsupported-features/es-syntax": "off",
        "no-console": "off"
      }
    },
    // source packages
    {
      "files": ["packages/**/*.js"],
      "parserOptions": {
        "sourceType": "module"
      }
    },
    // TypeScript source packages
    {
      "files": ["packages/**/*.ts"],
      // "parserOptions": {
      //   "project": "./tsconfig.json",
      //   "sourceType": "module",
      //   "tsconfigRootDir": __dirname
      // },
      "rules": {
        "@typescript-eslint/consistent-type-assertions": "error",
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "format": ["camelCase", "PascalCase"],
            "leadingUnderscore": "allow",
            "selector": ["parameter"]
          },
          {
            "format": null,
            "modifiers": ["const"],
            "selector": "variable"
          },
          {
            "format": ["PascalCase"],
            "leadingUnderscore": "allow",
            "selector": ["typeLike"]
          },
          {
            "format": ["PascalCase", "UPPER_CASE"],
            "selector": ["typeAlias"]
          }
        ],
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-inferrable-types": "error",
        "@typescript-eslint/no-require-imports": "error",
        "@typescript-eslint/no-unused-vars": "off",
        "consistent-return": "off",
        "consistent-this": "off",
        "constructor-super": "off",
        "default-case": "off",
        "dot-notation": "off",
        "func-name-matching": "off",
        "func-style": "off",
        "guard-for-in": "off",
        "line-comment-position": "off",
        "n/no-missing-import": "off",
        "n/no-unsupported-features/es-syntax": "off",
        "n/no-unsupported-features/node-builtins": "off",
        "new-cap": "off",
        "no-bitwise": "off",
        "no-case-declarations": "off",
        "no-constant-condition": "off",
        "no-continue": "off",
        "no-debugger": "error",
        "no-duplicate-imports": "off",
        "no-else-return": "off",
        "no-empty": "off",
        "no-fallthrough": "off",
        "no-inline-comments": "off",
        "no-invalid-this": "off",
        "no-labels": "off",
        "no-lone-blocks": "off",
        "no-lonely-if": "off",
        "no-multi-assign": "off",
        "no-negated-condition": "off",
        "no-new": "off",
        "no-script-url": "off",
        "no-shadow": "off",
        "no-throw-literal": "off",
        "no-undef-init": "off",
        "no-unneeded-ternary": "off",
        "no-unsafe-finally": "off",
        "no-unused-expressions": "error",
        "no-useless-call": "off",
        "no-useless-concat": "off",
        "no-useless-constructor": "off",
        "no-useless-escape": "off",
        "no-useless-return": "off",
        "no-warning-comments": "off",
        "object-shorthand": "off",
        "operator-assignment": "off",
        "prefer-rest-params": "off",
        "prefer-spread": "off",
        "spaced-comment": "off"
      }
    },
    {
      // these packages need to be fixed to avoid these warnings, but in the
      // meantime we should not regress the other packages
      "files": [
        // this specific test imports from @glimmer/runtime (causing a cyclic
        // dependency), it should either be refactored to use the interfaces
        // directly (instead of the impls) or moved into @glimmer/runtime
        "packages/@glimmer/reference/test/template-test.ts"
      ],
      "rules": {
        "n/no-extraneous-import": "warn"
      }
    }
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "project": ["tsconfig.json", "tsconfig.build.json", "packages/@glimmer/vm/tsconfig.json"]
  },
  "plugins": ["@typescript-eslint", "prettier", "qunit", "simple-import-sort", "unused-imports"],
  "root": true,
  "rules": {
    "@typescript-eslint/no-array-constructor": "error",
    "@typescript-eslint/no-empty-function": "error",
    "@typescript-eslint/no-unused-vars": "error",
    "accessor-pairs": "error",
    "array-callback-return": "error",
    "block-scoped-var": "error",
    // replace ESLint rules with TypeScript-compatible rules
    "camelcase": "off",
    "capitalized-comments": "off",
    "class-methods-use-this": "off",
    "complexity": "off",
    "consistent-return": "error",
    "consistent-this": "error",
    "default-case": "error",
    "dot-notation": [
      "error",
      {
        "allowKeywords": true
      }
    ],
    "eqeqeq": "error",
    "func-name-matching": "error",
    "func-names": "off",
    "func-style": ["error", "declaration"],
    "guard-for-in": "error",
    "id-denylist": "error",
    "id-length": "off",
    "id-match": "error",
    "import/export": "off",
    "import/first": ["error"],
    "import/newline-after-import": ["error"],
    "import/no-duplicates": ["error"],
    "import/no-extraneous-dependencies": ["error"],
    "import/order": "off",
    "init-declarations": "off",
    "max-depth": "off",
    "max-lines": "off",
    "max-nested-callbacks": "error",
    "max-params": "off",
    "n/callback-return": "error",
    "n/global-require": "off",
    "n/handle-callback-err": "error",
    // this is handled by import/no-extraneous-dependencies
    "n/no-extraneous-import": "off",
    "n/no-missing-import": "off",
    "n/no-mixed-requires": "error",
    "n/no-new-require": "error",
    "n/no-path-concat": "off",
    "n/no-process-env": "off",
    "n/no-process-exit": "off",
    "n/no-restricted-import": "error",
    "n/no-sync": "off",
    "n/no-unsupported-features/es-builtins": [
      "error",
      {
        "version": "16.0.0"
      }
    ],
    "new-cap": "error",
    "no-alert": "error",
    "no-array-constructor": "off",
    "no-await-in-loop": "off",
    "no-bitwise": "error",
    "no-caller": "error",
    "no-console": "error",
    "no-continue": "error",
    "no-div-regex": "error",
    "no-duplicate-imports": "error",
    "no-else-return": "error",
    "no-empty-function": "off",
    "no-eq-null": "error",
    "no-eval": "error",
    "no-extend-native": "error",
    "no-extra-bind": "error",
    "no-extra-label": "error",
    "no-global-assign": "error",
    "no-implicit-globals": "off",
    "no-implied-eval": "error",
    "no-inline-comments": "error",
    "no-invalid-this": "error",
    "no-iterator": "error",
    "no-label-var": "error",
    "no-labels": "error",
    "no-lone-blocks": "error",
    "no-lonely-if": "error",
    "no-loop-func": "error",
    "no-magic-numbers": "off",
    "no-multi-assign": "error",
    "no-multi-spaces": "error",
    "no-multi-str": "error",
    "no-negated-condition": "error",
    "no-nested-ternary": "error",
    "no-new": "error",
    "no-new-func": "error",
    "no-new-object": "error",
    "no-new-wrappers": "error",
    "no-octal-escape": "error",
    "no-param-reassign": "off",
    "no-plusplus": "off",
    "no-proto": "error",
    "no-restricted-globals": "error",
    "no-restricted-imports": "error",
    "no-restricted-properties": "error",
    "no-restricted-syntax": "error",
    "no-return-assign": "error",
    "no-return-await": "error",
    "no-script-url": "error",
    "no-self-compare": "error",
    "no-sequences": "error",
    "no-shadow": "error",
    "no-template-curly-in-string": "error",
    "no-ternary": "off",
    "no-throw-literal": "error",
    "no-undef-init": "error",
    "no-undefined": "off",
    "no-unmodified-loop-condition": "error",
    "no-unneeded-ternary": "error",
    "no-unsafe-negation": "error",
    "no-unused-expressions": "error",
    "no-unused-labels": "error",
    "no-unused-vars": "off",
    "no-use-before-define": "off",
    "no-useless-call": "error",
    "no-useless-computed-key": "error",
    "no-useless-concat": "error",
    "no-useless-constructor": "error",
    "no-useless-rename": "error",
    "no-useless-return": "error",
    "no-var": "error",
    "no-void": "error",
    "no-warning-comments": "error",
    "object-shorthand": "error",
    "one-var": "off",
    "operator-assignment": "error",
    "prefer-const": "off",
    "prefer-destructuring": [
      "error",
      {
        "array": false,
        "object": false
      }
    ],
    "prefer-numeric-literals": "error",
    "prefer-promise-reject-errors": "error",
    "prefer-rest-params": "error",
    "prefer-spread": "error",
    "prefer-template": "off",
    "prettier/prettier": "error",
    // disabled because we still have a few commented tests
    "qunit/no-commented-tests": "off",
    // disabled due to false positives
    "qunit/no-global-expect": "off",
    // disabled because we still use this pattern everywhere
    "qunit/no-global-module-test": "off",
    // disabled due to false positives
    "qunit/no-global-stop-start": "off",
    "radix": "error",
    "require-await": "error",
    "require-jsdoc": "off",
    "simple-import-sort/exports": ["error"],
    "simple-import-sort/imports": ["error"],
    "sort-imports": "off",
    "sort-keys": "off",
    "sort-vars": "off",
    "spaced-comment": ["error", "always"],
    "strict": "off",
    "symbol-description": "error",
    "unused-imports/no-unused-imports": "error",
    "unused-imports/no-unused-vars": [
      "warn",
      {
        "args": "after-used",
        "argsIgnorePattern": "^_",
        "vars": "all",
        "varsIgnorePattern": "^_"
      }
    ],
    "valid-jsdoc": "off",
    "vars-on-top": "error",
    "yoda": ["error", "never"]
  },
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [".js", ".ts", ".d.ts"]
    },
    "import/resolver": {
      "typescript": {}
    },
    "node": {
      "allowModules": ["@glimmer/debug", "@glimmer/local-debug-flags"],
      "tryExtensions": [".js", ".ts", ".d.ts", ".json"]
    }
  }
}
